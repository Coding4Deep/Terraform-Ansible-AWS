
- name: Install required packages for extracting archives
  apt:
    name:
      - tar
      - gzip
      - bzip2
      - xz-utils
      - unzip
    state: present
    update_cache: yes


- name: Create nexus user
  user:
    name: nexus
    shell: /bin/bash
    home: /opt/nexus
    system: yes


- name: Download Nexus
  get_url:
    url: https://download.sonatype.com/nexus/3/nexus-3.81.1-01-linux-x86_64.tar.gz
    dest: /tmp/nexus.tar.gz
    mode: '0644'

- name: Extract Nexus
  unarchive:
    src: /tmp/nexus.tar.gz
    dest: /opt
    remote_src: yes



- name: Check if /opt/nexus exists
  stat:
    path: /opt/nexus
  register: nexus_should_remove_dir
  become: true

- name: Remove existing /opt/nexus directory if it is not a symlink
  file:
    path: /opt/nexus
    state: absent
  when: nexus_should_remove_dir.stat.exists and not nexus_should_remove_dir.stat.islnk
  become: true


- name: Create symlink for nexus
  file:
    src: /opt/nexus-3.81.1-01
    dest: /opt/nexus
    state: link
- name: Change ownership of Nexus directories
  file:
    path: /opt/nexus-3.81.1-01
    owner: nexus
    group: nexus
    state: directory
    recurse: yes
- name: Ensure nexus script is executable
  file:
    path: /opt/nexus/bin/nexus
    mode: '0755'
    state: file
- name: Set run_as_user to nexus in nexus.rc
  lineinfile:
    path: /opt/nexus/bin/nexus.rc
    line: 'run_as_user="nexus"'
    create: yes
- name: Create systemd service for Nexus
  copy:
    dest: /etc/systemd/system/nexus.service
    content: |
      [Unit]
      Description=nexus service
      After=network.target
      [Service]
      Type=forking
      LimitNOFILE=65536
      ExecStart=/bin/bash /opt/nexus/bin/nexus start
      ExecStop=//bin/bash opt/nexus/bin/nexus stop
      User=nexus
      Restart=on-abort
      [Install]
      WantedBy=multi-user.target


- name: Ensure nexus work directory exists and owned by nexus user
  file:
    path: /opt/sonatype-work
    state: directory
    owner: nexus
    group: nexus
    mode: '0755'
    recurse: yes
  become: true


- name: Reload systemd
  command: systemctl daemon-reexec
- name: Enable and start Nexus service
  systemd:
    name: nexus
    enabled: yes
    state: started